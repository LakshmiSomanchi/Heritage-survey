# app.py (Heritage Specific Streamlit Dairy Survey)

import streamlit as st
import pandas as pd
import datetime
import os

# Ensure save folder exists
SAVE_DIR = 'survey_responses'
os.makedirs(SAVE_DIR, exist_ok=True)

# Multilingual Translations
dict_translations = {
    'English': {
        'Language': 'Language', 'Farmer Profile': 'Farmer Profile', 'VLCC Name': 'VLCC Name',
        'HPC/MCC Code': 'HPC/MCC Code', 'Types': 'Type', 'HPCC': 'HPCC', 'MCC': 'MCC',
        'Farmer Name': 'Farmer Name', 'Farmer Code': 'Farmer Code / Pourer ID', 'Gender': 'Gender',
        'Male': 'Male', 'Female': 'Female', 'Farm Details': 'Farm Details',
        'Number of Cows': 'Number of Cows', 'No. of Cattle in Milk': 'No. of Cattle in Milk',
        'No. of Calves/Heifers': 'No. of Calves/Heifers', 'No. of Desi cows': 'No. of Desi cows',
        'No. of Cross breed cows': 'No. of Cross breed cows', 'No. of Buffalo': 'No. of Buffalo',
        'Milk Production': 'Milk Production (liters/day)', 'Specific Questions': 'Specific Questions',
        'Green Fodder': 'Green Fodder', 'Type of Green Fodder': 'Type of Green Fodder (Multiple Select)',
        'Quantity of Green Fodder': 'Quantity of Green Fodder (Kg/day)',
        'Dry Fodder': 'Dry Fodder', 'Type of Dry Fodder': 'Type of Dry Fodder (Multiple Select)',
        'Quantity of Dry Fodder': 'Quantity of Dry Fodder (Kg/day)',
        'Pellet Feed': 'Pellet Feed', 'Pellet Feed Brand': 'Pellet Feed Brand (Multiple Select)',
        'Quantity of Pellet Feed': 'Quantity of Pellet Feed (Kg/day)',
        'Mineral Mixture': 'Mineral Mixture', 'Mineral Mixture Brand': 'Mineral Mixture Brand',
        'Quantity of Mineral Mixture': 'Quantity of Mineral Mixture (gm/day)',
        'Silage': 'Silage', 'Source and Price of Silage': 'Source and Price of Silage',
        'Quantity of Silage': 'Quantity of Silage (Kg/day)', 'Source of Water': 'Source of Water (Multiple Select)',
        'Name of Surveyor': 'Name of Surveyor', 'Date of Visit': 'Date of Visit',
        'Submit': 'Submit', 'Yes': 'Yes', 'No': 'No', 'Download CSV': 'Download CSV'
    },
    'Hindi': {  # You'll need to translate these!  Example translations provided.
        'Language': '‡§≠‡§æ‡§∑‡§æ', 'Farmer Profile': '‡§ï‡§ø‡§∏‡§æ‡§® ‡§™‡•ç‡§∞‡•ã‡§´‡§º‡§æ‡§á‡§≤', 'VLCC Name': '‡§µ‡•Ä‡§è‡§≤‡§∏‡•Ä‡§∏‡•Ä ‡§®‡§æ‡§Æ',
        'HPC/MCC Code': '‡§è‡§ö‡§™‡•Ä‡§∏‡•Ä/‡§è‡§Æ‡§∏‡•Ä‡§∏‡•Ä ‡§ï‡•ã‡§°', 'Types': '‡§™‡•ç‡§∞‡§ï‡§æ‡§∞', 'HPCC': '‡§è‡§ö‡§™‡•Ä‡§∏‡•Ä‡§∏‡•Ä', 'MCC': '‡§è‡§Æ‡§∏‡•Ä‡§∏‡•Ä',
        'Farmer Name': '‡§ï‡§ø‡§∏‡§æ‡§® ‡§ï‡§æ ‡§®‡§æ‡§Æ', 'Farmer Code': '‡§ï‡§ø‡§∏‡§æ‡§® ‡§ï‡•ã‡§°/‡§¶‡•Ç‡§ß‡§¶‡§æ‡§§‡§æ ‡§Ü‡§à‡§°‡•Ä', 'Gender': '‡§≤‡§ø‡§Ç‡§ó',
        'Male': '‡§™‡•Å‡§∞‡•Å‡§∑', 'Female': '‡§Æ‡§π‡§ø‡§≤‡§æ', 'Farm Details': '‡§´‡§æ‡§∞‡•ç‡§Æ ‡§µ‡§ø‡§µ‡§∞‡§£',
        'Number of Cows': '‡§ó‡§æ‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ', 'No. of Cattle in Milk': '‡§¶‡•Ç‡§ß ‡§¶‡•á‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§Æ‡§µ‡•á‡§∂‡•Ä',
        'No. of Calves/Heifers': '‡§¨‡§õ‡§°‡§º‡•á/‡§¨‡§õ‡§°‡§º‡§ø‡§Ø‡§æ‡§Ç', 'No. of Desi cows': '‡§¶‡•á‡§∏‡•Ä ‡§ó‡§æ‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ',
        'No. of Cross breed cows': '‡§ï‡•ç‡§∞‡•â‡§∏‡§¨‡•ç‡§∞‡•Ä‡§° ‡§ó‡§æ‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ', 'No. of Buffalo': '‡§≠‡•à‡§Ç‡§∏‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ',
        'Milk Production': '‡§¶‡•Ç‡§ß ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡§® (‡§≤‡•Ä‡§ü‡§∞/‡§¶‡§ø‡§®)', 'Specific Questions': '‡§µ‡§ø‡§∂‡§ø‡§∑‡•ç‡§ü ‡§™‡•ç‡§∞‡§∂‡•ç‡§®',
        'Green Fodder': '‡§π‡§∞‡§æ ‡§ö‡§æ‡§∞‡§æ', 'Type of Green Fodder': '‡§π‡§∞‡•á ‡§ö‡§æ‡§∞‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ (‡§è‡§ï‡§æ‡§ß‡§ø‡§ï ‡§ö‡§Ø‡§®)',
        'Quantity of Green Fodder': '‡§π‡§∞‡•á ‡§ö‡§æ‡§∞‡•á ‡§ï‡•Ä ‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ (‡§ï‡§ø‡§≤‡•ã/‡§¶‡§ø‡§®)',
        'Dry Fodder': '‡§∏‡•Ç‡§ñ‡§æ ‡§ö‡§æ‡§∞‡§æ', 'Type of Dry Fodder': '‡§∏‡•Ç‡§ñ‡•á ‡§ö‡§æ‡§∞‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ (‡§è‡§ï‡§æ‡§ß‡§ø‡§ï ‡§ö‡§Ø‡§®)',
        'Quantity of Dry Fodder': '‡§∏‡•Ç‡§ñ‡•á ‡§ö‡§æ‡§∞‡•á ‡§ï‡•Ä ‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ (‡§ï‡§ø‡§≤‡•ã/‡§¶‡§ø‡§®)',
        'Pellet Feed': '‡§™‡•á‡§≤‡•á‡§ü ‡§´‡§º‡•Ä‡§°', 'Pellet Feed Brand': '‡§™‡•á‡§≤‡•á‡§ü ‡§´‡§º‡•Ä‡§° ‡§¨‡•ç‡§∞‡§æ‡§Ç‡§° (‡§è‡§ï‡§æ‡§ß‡§ø‡§ï ‡§ö‡§Ø‡§®)',
        'Quantity of Pellet Feed': '‡§™‡•á‡§≤‡•á‡§ü ‡§´‡§º‡•Ä‡§° ‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ (‡§ï‡§ø‡§≤‡•ã/‡§¶‡§ø‡§®)',
        'Mineral Mixture': '‡§ñ‡§®‡§ø‡§ú ‡§Æ‡§ø‡§∂‡•ç‡§∞‡§£', 'Mineral Mixture Brand': '‡§ñ‡§®‡§ø‡§ú ‡§Æ‡§ø‡§∂‡•ç‡§∞‡§£ ‡§¨‡•ç‡§∞‡§æ‡§Ç‡§°',
        'Quantity of Mineral Mixture': '‡§ñ‡§®‡§ø‡§ú ‡§Æ‡§ø‡§∂‡•ç‡§∞‡§£ ‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ (‡§ó‡•ç‡§∞‡§æ‡§Æ/‡§¶‡§ø‡§®)',
        'Silage': '‡§∏‡§æ‡§Ø‡§≤‡•á‡§ú', 'Source and Price of Silage': '‡§∏‡§æ‡§Ø‡§≤‡•á‡§ú ‡§∏‡•ç‡§∞‡•ã‡§§ ‡§î‡§∞ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø',
        'Quantity of Silage': '‡§∏‡§æ‡§Ø‡§≤‡•á‡§ú ‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ (‡§ï‡§ø‡§≤‡•ã/‡§¶‡§ø‡§®)', 'Source of Water': '‡§™‡§æ‡§®‡•Ä ‡§ï‡§æ ‡§∏‡•ç‡§∞‡•ã‡§§ (‡§è‡§ï‡§æ‡§ß‡§ø‡§ï ‡§ö‡§Ø‡§®)',
        'Name of Surveyor': '‡§∏‡§∞‡•ç‡§µ‡•á‡§ï‡•ç‡§∑‡§ï ‡§ï‡§æ ‡§®‡§æ‡§Æ', 'Date of Visit': '‡§¶‡•å‡§∞‡•á ‡§ï‡•Ä ‡§§‡§ø‡§•‡§ø',
        'Submit': '‡§ú‡§Æ‡§æ ‡§ï‡§∞‡•á‡§Ç', 'Yes': '‡§π‡§æ‡§Å', 'No': '‡§®‡§π‡•Ä‡§Ç', 'Download CSV': 'CSV ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç'
    },
    'Telugu': {  # You'll need to translate these!
        'Language': '‡∞≠‡∞æ‡∞∑', 'Farmer Profile': '‡∞∞‡±à‡∞§‡±Å ‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡±Å', 'VLCC Name': 'VLCC ‡∞™‡±á‡∞∞‡±Å',
        'HPC/MCC Code': 'HPC/MCC ‡∞ï‡±ã‡∞°‡±ç', 'Types': '‡∞∞‡∞ï‡∞Ç', 'HPCC': '‡∞π‡±Ü‡∞ö‡±ç‚Äå‡∞™‡∞ø‡∞∏‡∞ø‡∞∏‡∞ø', 'MCC': '‡∞é‡∞Ç‡∞∏‡∞ø‡∞∏‡∞ø',
        'Farmer Name': '‡∞∞‡±à‡∞§‡±Å ‡∞™‡±á‡∞∞‡±Å', 'Farmer Code': '‡∞∞‡±à‡∞§‡±Å ‡∞ï‡±ã‡∞°‡±ç / ‡∞™‡±ã‡∞∞‡∞∞‡±ç ‡∞ê‡∞°‡∞ø', 'Gender': '‡∞≤‡∞ø‡∞Ç‡∞ó‡∞Ç',
        'Male': '‡∞™‡±Å‡∞∞‡±Å‡∞∑‡±Å‡∞°‡±Å', 'Female': '‡∞∏‡±ç‡∞§‡±ç‡∞∞‡±Ä', 'Farm Details': '‡∞™‡∞Ç‡∞¶‡∞ø ‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡±Å',
        'Number of Cows': '‡∞Ü‡∞µ‡±Å‡∞≤ ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø', 'No. of Cattle in Milk': '‡∞™‡∞æ‡∞≤‡∞≤‡±ã ‡∞â‡∞®‡±ç‡∞® ‡∞™‡∞∂‡±Å‡∞µ‡±Å‡∞≤‡±Å',
        'No. of Calves/Heifers': '‡∞¶‡±Ç‡∞°‡∞≤‡±Å/‡∞π‡±Ü‡∞´‡∞∞‡±ç‡∞≤‡±Å ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø', 'No. of Desi cows': '‡∞¶‡±á‡∞∂‡±Ä ‡∞Ü‡∞µ‡±Å‡∞≤ ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø',
        'No. of Cross breed cows': '‡∞ï‡±ç‡∞∞‡∞æ‡∞∏‡±ç‚Äå‡∞¨‡±ç‡∞∞‡±Ä‡∞°‡±ç ‡∞Ü‡∞µ‡±Å‡∞≤ ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø', 'No. of Buffalo': '‡∞ó‡±á‡∞¶‡±Ü‡∞≤ ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø',
        'Milk Production': '‡∞™‡∞æ‡∞≤ ‡∞â‡∞§‡±ç‡∞™‡∞§‡±ç‡∞§‡∞ø (‡∞≤‡±Ä‡∞ü‡∞∞‡±ç‡∞≤‡±Å/‡∞∞‡±ã‡∞ú‡±Å)', 'Specific Questions': '‡∞™‡±ç‡∞∞‡∞§‡±ç‡∞Ø‡±á‡∞ï ‡∞™‡±ç‡∞∞‡∞∂‡±ç‡∞®‡∞≤‡±Å',
        'Green Fodder': '‡∞™‡∞ö‡±ç‡∞ö‡∞ø ‡∞Æ‡±á‡∞§', 'Type of Green Fodder': '‡∞™‡∞ö‡±ç‡∞ö‡∞ø ‡∞Æ‡±á‡∞§ ‡∞∞‡∞ï‡∞Ç (‡∞¨‡∞π‡±Å‡∞≥ ‡∞é‡∞Ç‡∞™‡∞ø‡∞ï)',
        'Quantity of Green Fodder': '‡∞™‡∞ö‡±ç‡∞ö‡∞ø ‡∞Æ‡±á‡∞§ ‡∞™‡∞∞‡∞ø‡∞Æ‡∞æ‡∞£‡∞Ç (‡∞ï‡∞ø‡∞≤‡±ã/‡∞∞‡±ã‡∞ú‡±Å)',
        'Dry Fodder': '‡∞™‡±ä‡∞°‡∞ø ‡∞Æ‡±á‡∞§', 'Type of Dry Fodder': '‡∞™‡±ä‡∞°‡∞ø ‡∞Æ‡±á‡∞§ ‡∞∞‡∞ï‡∞Ç (‡∞¨‡∞π‡±Å‡∞≥ ‡∞é‡∞Ç‡∞™‡∞ø‡∞ï)',
        'Quantity of Dry Fodder': '‡∞™‡±ä‡∞°‡∞ø ‡∞Æ‡±á‡∞§ ‡∞™‡∞∞‡∞ø‡∞Æ‡∞æ‡∞£‡∞Ç (‡∞ï‡∞ø‡∞≤‡±ã/‡∞∞‡±ã‡∞ú‡±Å)',
        'Pellet Feed': '‡∞ó‡±Å‡∞≥‡∞ø‡∞ï‡∞≤ ‡∞¶‡∞æ‡∞£‡∞æ', 'Pellet Feed Brand': '‡∞ó‡±Å‡∞≥‡∞ø‡∞ï‡∞≤ ‡∞¶‡∞æ‡∞£‡∞æ ‡∞¨‡±ç‡∞∞‡∞æ‡∞Ç‡∞°‡±ç (‡∞¨‡∞π‡±Å‡∞≥ ‡∞é‡∞Ç‡∞™‡∞ø‡∞ï)',
        'Quantity of Pellet Feed': '‡∞ó‡±Å‡∞≥‡∞ø‡∞ï‡∞≤ ‡∞¶‡∞æ‡∞£‡∞æ ‡∞™‡∞∞‡∞ø‡∞Æ‡∞æ‡∞£‡∞Ç (‡∞ï‡∞ø‡∞≤‡±ã/‡∞∞‡±ã‡∞ú‡±Å)',
        'Mineral Mixture': '‡∞ñ‡∞®‡∞ø‡∞ú ‡∞Æ‡∞ø‡∞∂‡±ç‡∞∞‡∞Æ‡∞Ç', 'Mineral Mixture Brand': '‡∞ñ‡∞®‡∞ø‡∞ú ‡∞Æ‡∞ø‡∞∂‡±ç‡∞∞‡∞Æ‡∞Ç ‡∞¨‡±ç‡∞∞‡∞æ‡∞Ç‡∞°‡±ç',
        'Quantity of Mineral Mixture': '‡∞ñ‡∞®‡∞ø‡∞ú ‡∞Æ‡∞ø‡∞∂‡±ç‡∞∞‡∞Æ‡∞Ç ‡∞™‡∞∞‡∞ø‡∞Æ‡∞æ‡∞£‡∞Ç (‡∞ó‡±ç‡∞∞‡∞æ‡∞Æ‡±Å‡∞≤‡±Å/‡∞∞‡±ã‡∞ú‡±Å)',
        'Silage': '‡∞∏‡±à‡∞≤‡±á‡∞ú‡±ç', 'Source and Price of Silage': '‡∞∏‡±à‡∞≤‡±á‡∞ú‡±ç ‡∞Æ‡±Ç‡∞≤‡∞Ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞ß‡∞∞',
        'Quantity of Silage': '‡∞∏‡±à‡∞≤‡±á‡∞ú‡±ç ‡∞™‡∞∞‡∞ø‡∞Æ‡∞æ‡∞£‡∞Ç (‡∞ï‡∞ø‡∞≤‡±ã/‡∞∞‡±ã‡∞ú‡±Å)', 'Source of Water': '‡∞®‡±Ä‡∞ü‡∞ø ‡∞Æ‡±Ç‡∞≤‡∞Ç (‡∞¨‡∞π‡±Å‡∞≥ ‡∞é‡∞Ç‡∞™‡∞ø‡∞ï)',
        'Name of Surveyor': '‡∞∏‡∞∞‡±ç‡∞µ‡±á‡∞Ø‡∞∞‡±ç ‡∞™‡±á‡∞∞‡±Å', 'Date of Visit': '‡∞∏‡∞Ç‡∞¶‡∞∞‡±ç‡∞∂‡∞® ‡∞§‡±á‡∞¶‡±Ä',
        'Submit': '‡∞∏‡∞Æ‡∞∞‡±ç‡∞™‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø', 'Yes': '‡∞Ö‡∞µ‡±Å‡∞®‡±Å', 'No': '‡∞ï‡∞æ‡∞¶‡±Å', 'Download CSV': 'CSV ‡∞°‡±å‡∞®‡±ç‚Äå‡∞≤‡±ã‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø'
    }
}

# Streamlit Page Config
st.set_page_config(page_title="Heritage Dairy Survey", page_icon="üêÑ", layout="centered")

# Language Selection
lang = st.selectbox("Language / ‡§≠‡§æ‡§∑‡§æ / ‡∞≠‡∞æ‡∞∑", ("English", "Hindi", "Telugu"))
labels = dict_translations.get(lang, dict_translations['English'])

# Title
st.title(labels['Farmer Profile'])

# --- Heritage Specific Data ---
VLCC_NAMES = ["VLCC1", "VLCC2", "VLCC3"]  # Replace with actual VLCC names
GREEN_FODDER_OPTIONS = ["Napier", "Maize", "Sorghum"]
DRY_FODDER_OPTIONS = ["Paddy Straw", "Maize Straw", "Ragi Straw", "Ground Nut Crop Residues"]
PELLET_FEED_BRANDS = ["Heritage Milk Rich", "Heritage Milk Joy", "Heritage Power Plus", "Kamadhenu", "Godrej", "Sreeja", "Vallabha-Panchamruth", "Vallabha-Subham Pusti"]
MINERAL_MIXTURE_BRANDS = ["Herita Vit", "Herita Min", "Other (Specify)"]
WATER_SOURCE_OPTIONS = ["Panchayat", "Borewell", "Water Streams"]
SURVEYOR_NAMES = ["Shiva Shankaraiah", "Reddisekhar", "Balakrishna", "Somasekhar", "Mahesh Kumar", "Dr Swaran Raj Nayak", "Ram Prasad", "K Balaji"]
# -----------------------------

# Form Start
with st.form("survey_form"):
    st.header(labels['Farmer Profile'])
    vlcc_name = st.selectbox(labels['VLCC Name'], VLCC_NAMES)  # VLCC Dropdown
    hpc_code = st.text_input(labels['HPC/MCC Code'])
    types = st.selectbox(labels['Types'], (labels['HPCC'], labels['MCC']))
    farmer_name = st.text_input(labels['Farmer Name'])
    farmer_code = st.text_input(labels['Farmer Code'])
    gender = st.selectbox(labels['Gender'], (labels['Male'], labels['Female']))

    st.header(labels['Farm Details'])
    cows = st.number_input(labels['Number of Cows'], min_value=0)
    cattle_in_milk = st.number_input(labels['No. of Cattle in Milk'], min_value=0)
    calves = st.number_input(labels['No. of Calves/Heifers'], min_value=0)
    desi_cows = st.number_input(labels['No. of Desi cows'], min_value=0)
    crossbreed_cows = st.number_input(labels['No. of Cross breed cows'], min_value=0)
    buffalo = st.number_input(labels['No. of Buffalo'], min_value=0)
    milk_production = st.number_input(labels['Milk Production'], min_value=0.0)

    st.header(labels['Specific Questions'])
    green_fodder = st.selectbox(labels['Green Fodder'], (labels['Yes'], labels['No']))
    green_fodder_types = st.multiselect(labels['Type of Green Fodder'], GREEN_FODDER_OPTIONS)  # Multiple Select
    green_fodder_qty = st.number_input(labels['Quantity of Green Fodder'], min_value=0.0)
    dry_fodder = st.selectbox(labels['Dry Fodder'], (labels['Yes'], labels['No']))
    dry_fodder_types = st.multiselect(labels['Type of Dry Fodder'], DRY_FODDER_OPTIONS)  # Multiple Select
    dry_fodder_qty = st.number_input(labels['Quantity of Dry Fodder'], min_value=0.0)

    pellet_feed = st.selectbox(labels['Pellet Feed'], (labels['Yes'], labels['No']))  # Renamed
    pellet_feed_brands = st.multiselect(labels['Pellet Feed Brand'], PELLET_FEED_BRANDS)  # Multiple Select
    pellet_feed_qty = st.number_input(labels['Quantity of Pellet Feed'], min_value=0.0)

    mineral_mixture = st.selectbox(labels['Mineral Mixture'], (labels['Yes'], labels['No']))
    mineral_brand = st.selectbox(labels['Mineral Mixture Brand'], MINERAL_MIXTURE_BRANDS)  # Dropdown
    mineral_qty = st.number_input(labels['Quantity of Mineral Mixture'], min_value=0.0)

    silage = st.selectbox(labels['Silage'], (labels['Yes'], labels['No']))
    silage_source = st.text_input(labels['Source and Price of Silage'])
    silage_qty = st.number_input(labels['Quantity of Silage'], min_value=0.0)

    water_sources = st.multiselect(labels['Source of Water'], WATER_SOURCE_OPTIONS)  # Multiple Select

    surveyor_name = st.selectbox(labels['Name of Surveyor'], SURVEYOR_NAMES)  # Dropdown
    visit_date = st.date_input(labels['Date of Visit'])

    submit = st.form_submit_button(labels['Submit'])

if submit:
    now = datetime.datetime.now()
    data = {
        'Timestamp': now.isoformat(),
        'Language': lang,
        'VLCC Name': vlcc_name,  # VLCC
        'HPC/MCC Code': hpc_code,
        'Types': types,
        'Farmer Name': farmer_name,
        'Farmer Code': farmer_code,
        'Gender': gender,
        'Number of Cows': cows,
        'No. of Cattle in Milk': cattle_in_milk,
        'No. of Calves/Heifers': calves,
        'No. of Desi cows': desi_cows,
        'No. of Cross breed cows': crossbreed_cows,
        'No. of Buffalo': buffalo,
        'Milk Production (liters/day)': milk_production,
        'Green Fodder': green_fodder,
        'Type of Green Fodder': ", ".join(green_fodder_types),  # Store multiple selections as comma-separated string
        'Quantity of Green Fodder (Kg/day)': green_fodder_qty,
        'Dry Fodder': dry_fodder,
        'Type of Dry Fodder': ", ".join(dry_fodder_types),  # Store multiple selections as comma-separated string
        'Quantity of Dry Fodder (Kg/day)': dry_fodder_qty,
        'Pellet Feed': pellet_feed,  # Renamed
        'Pellet Feed Brand': ", ".join(pellet_feed_brands),  # Store multiple selections as comma-separated string
        'Quantity of Pellet Feed (Kg/day)': pellet_feed_qty,
        'Mineral Mixture': mineral_mixture,
        'Mineral Mixture Brand': mineral_brand,
        'Quantity of Mineral Mixture (gm/day)': mineral_qty,
        'Silage': silage,
        'Source and Price of Silage': silage_source,
        'Quantity of Silage (Kg/day)': silage_qty,
        'Source of Water': ", ".join(water_sources),  # Store multiple selections as comma-separated string
        'Surveyor Name': surveyor_name,
        'Date of Visit': visit_date.isoformat() if isinstance(visit_date, datetime.date) else None  # Handle date object
    }
    df = pd.DataFrame([data])
    filename = f"survey_{now.strftime('%Y%m%d_%H%M%S')}.csv"
    df.to_csv(os.path.join(SAVE_DIR, filename), index=False, encoding='utf-8')
    st.success("‚úÖ Survey Submitted and Saved!")

st.divider()
st.header("üîê Admin Real-Time Access")

# Allowed Emails
ALLOWED_EMAILS = ["shifalis@tns.org", "rmukherjee@tns.org","rsomanchi@tns.org", "mkaushal@tns.org"]
admin_email = st.text_input("Enter your Admin Email to unlock extra features:")

if admin_email in ALLOWED_EMAILS:
    st.success("‚úÖ Admin access granted! Real-time view enabled.")
else:
    if admin_email:
        st.error("‚ùå Not an authorized admin.")

if st.checkbox("üìÑ View Past Submissions"):
    files = [f for f in os.listdir(SAVE_DIR) if f.endswith('.csv')]
    if files:
        all_data = pd.concat([pd.read_csv(os.path.join(SAVE_DIR, f)) for f in files], ignore_index=True)
        st.dataframe(all_data)

        csv = all_data.to_csv(index=False).encode('utf-8')
        st.download_button(
            label="‚¨áÔ∏è Download All Responses",
            data=csv,
            file_name='all_survey_responses.csv',
            mime='text/csv',
            key='public_csv_download'
        )
    else:
        st.warning("‚ö†Ô∏è No submissions found yet.")
